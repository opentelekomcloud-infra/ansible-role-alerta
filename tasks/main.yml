---
# tasks file for alerta

- name: Load a variable file based on the OS type, or a default if not found.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "default.yml"
      paths:
        - 'vars'

- name: Install required packages
  become: true
  package:
    state: present
    name: "{{ item }}"
  with_items: "{{ packages }}"
  register: task_result
  until: task_result is success
  retries: 5

- name: Create Alerta group
  become: true
  group:
    name: "{{ alerta_os_user }}"
    state: present

- name: Create Alerta user
  become: true
  user:
    name: "{{ alerta_os_user }}"
    group: "{{ alerta_os_group }}"

- name: Create required directories
  become: true
  file:
    path: "{{ item.dest }}"
    state: directory
    recurse: yes
    owner: "{{ alerta_os_user }}"
    group: "{{ alerta_os_group }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - {dest: "/etc/alerta"}

- name: Write Alerta config files
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ alerta_os_user }}"
    group: "{{ alerta_os_group }}"
    mode: 0770
  loop:
    - {src: "env.j2", dest: "/etc/alerta/env"}
    - {src: "alertad.conf.j2", dest: "/etc/alerta/alertad.conf"}
    - {src: "alerta.conf.j2", dest: "/etc/alerta/alerta.conf"}
  notify:
    - restart alerta

- name: Write SSL Cert
  become: true
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.location }}"
  when: alerta_enable_ssl and item.content
  loop:
    - {content: "{{ alerta_ssl_cert_content }}",
       location: "{{ alerta_ssl_cert_location }}"}
    - {content: "{{ alerta_ssl_key_content }}",
       location: "{{ alerta_ssl_key_location }}"}

- name: Set ssl cert permission
  become: true
  file:
    path: "{{ item.location }}"
    owner: "{{ alerta_os_user }}"
    group: "{{ alerta_os_group }}"
    mode: "{{ item.mode }}"
  when: alerta_enable_ssl
  loop:
    - {location: "{{ alerta_ssl_cert_location }}",
       mode: '0644'}
    - {location: "{{ alerta_ssl_key_location }}",
       mode: '0600'}

- include_tasks: firewall.yml

- name: Write Alerta Systemd unit file
  become: true
  template:
    src: "alerta.service.j2"
    dest: "{{ alerta_systemd_unit_path }}"
  notify:
    - restart alerta
